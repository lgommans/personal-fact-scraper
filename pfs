#!/usr/bin/env python3

### SETTINGS

""" How much context should be kept when storing facts? """
keep_context = 150

### End of settings

from psstrings import psstrings

import sys, json

def err(s):
    sys.stderr.write(s + '\n')

def usage():
    err('Usage:')
    err('  pfs <user-start-marker> <user-end-marker>')
    err('Where user-start-marker is a string that precedes a username. For')
    err('example, if a forum has something like')
    err('  <div class=post><b>Joe:</b> ...</div>')
    err('then the user-start-marker is "<div class=post><b>" and the')
    err('user-end-marker is "</b>".')
    err('')
    err('It will read HTML from STDIN and load all of it into memory and')
    err('print output in JSON format to STDOUT. Tip: pipe through jq for')
    err('pretty print.')

if len(sys.argv) != 3:
    usage()
    sys.exit(1)

program, usmarker, uemarker = sys.argv

data = sys.stdin.read()

if usmarker not in data:
    err('User start marker not found in data.')
    print('{}')
    sys.exit(2)

data = data[data.index(usmarker):]

facts = {}
for part in data.split(sys.argv[1]):
    if sys.argv[2] in part:
        username, post = part.split(sys.argv[2], 1)
        if username not in facts:
            facts[username] = {}

        for statement in psstrings:
            if statement in post:
                cat = psstrings[statement]
                if cat not in facts[username]:
                    facts[username][cat] = []

                start = max(0, post.index(statement))
                end = start + keep_context
                facts[username][cat].append(post[start:end])
    else:
        # Can't extract username, so we can hardly obtain facts...
        continue

print(json.dumps(facts))

